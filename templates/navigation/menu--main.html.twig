{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see https://twig.symfony.com/doc/1.x/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      {% set classes = ['menu', 'dropdown'] %}
      <ul{{ attributes.addClass(classes) }}>
    {% else %}
      <ul class="menu">
    {% endif %}
    {% for item in items %}
      {%
        set classes = [
          'menu-item',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
          item.in_active_trail ? 'menu-item--active-trail',
        ]
      %}
      <li{{ item.attributes.addClass(classes) }}>
        {% if item.below %}
          {#
            Generate a unique ID to apply to user-controlled element and the
            element that is affected. Hopefully the link title is unique enough.
            If not, consider using random numbers.
          #}
          {% set submenu_id = item.title|clean_class %}

          {% if menu_level > 0 %}
            <h2>{{ item.title }}</h2>
          {% else %}
            <button aria-controls="submenu-wrap-{{ submenu_id }}" aria-expanded="false" aria-label="{{ '@label sub-menu'|t({'@label': item.title}) }}" class="no-style submenu-toggle">
              {{ item.title }}
            </button>
          {% endif %}

          <div id="submenu-wrap-{{ submenu_id }}" class="submenu-wrap">
            {#
              Check if link uses <nolink>. Do not render again, as we are showing that
              as the button.
            #}
            {% if item.url.toString|length > 0 %}
              <div class="submenu-wrap-link">
                {{ link(item.title, item.url) }}
              </div>
            {% endif %}

            {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
          </div>
        {% else %}
          {{ link(item.title, item.url) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
